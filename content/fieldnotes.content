% Field Notes: From Here to Everywhere: Taking your web skills mobile

# Section 2: Responsive Web Design: Getting Fluid

* [Starting point](02/01-start) of Sigma Stronghold Website
* Sigma Stronghold Site [with performance improvements and fluid layout](02/02-fluid)

## Exercise

Spend a little time getting to know the starting point of the Sigma Stronghold website's HTML.

1. Open `02/01-start/index.html` in a text editor. Spend a bit of time looking at the markup here.
2. Do you see any potential issues with this HTML markup that might hinder Sergeant Dingus from getting the website to work well on mobile devices?
3. Does anything stick out at you in general that doesn't seem like best practices?

## Extra Credit

What improvements (not mentioned in the slides) do you see to `02/02-fluid/index.html` versus the starting point in `02/01-fluid/index.html`?


## References

* [A Tale of two Viewports by @ppk](http://www.quirksmode.org/mobile/viewports.html)
* See Ethan's ([@beep](http://twitter.com/beep)) original article about RWD on [A List Apart](http://www.alistapart.com/articles/responsive-web-design/)
* Fluid formula: `result = target / context`
* Percentages (%) and `em`s are both fluid units, `pt`s, `px`, inches and pica are fixed. (Technically, `px` are not *absolute* absolute, as the size of a pixel varies with different devices and screens and are not *fixed*, per se. However, for our purposes, they are effectively absolute, as they do not scale).
* [ySlow](http://developer.yahoo.com/yslow/)
* [W3C validator][w3cv]
* [Viewport documentation on Mozilla Developer Network](https://developer.mozilla.org/en/mobile/viewport_meta_tag)
* [Using the Google Font API](http://mashable.com/2010/07/29/google-font-api-guide/) on Mashable (details on `link` tag syntax)

[w3cv]: http://validator.w3.org/ "W3C Validator"

---------------------------------------------------------------

# Section 3: Getting Responsive

## Responsive Images

### Snippet reference: Responsive Images

~~~{.css}
img {
  max-width: 100%;
}
~~~

##### styles.css

## Media Queries

### Snippet Reference: A couple of examples

~~~ {.css}
@media screen and (min-width: 600px) {
  // In browsers that support media queries,
  // rules in here will only be applied if the
  // query expression evaluates as true
}
~~~

~~~ {.html}
<link rel="stylesheet" media="screen and (min-width:600px)" href="thing.css">
~~~



* For the full CSS, see `examples/02/02-fluid/styles.css`.
* See the [responsive version of the site](03/01-responsive)

## More Media Query Syntax

### Constructing media queries with logical `AND`

~~~~{.css}
@media screen and (max-width: 35em) and (min-width: 25em) { }

@media all and (color) { }
~~~~

### Constructing media queries with logical `OR`

* `OR` is represented by a comma `,`

~~~~{.css}
@media print and (min-width: 450px),
       screen and (min-width: 20em) { }
~~~~


## References

* You can always [read the CSS3 Media Queries spec](http://www.w3.org/TR/css3-mediaqueries/)
* [Smush.it](http://smush.it)
* [CSS3 Media Queries cheat sheet](http://reference.sitepoint.com/css/mediaqueries) on Sitepoint


-----------------------------------------------------------------

# Section 4: Mobile-First RWD

## Exercise

1. Install the window resizer extension [Chrome](https://chrome.google.com/webstore/detail/kkelicaakdanhinjdeammmilcgefonfh) or [FireFox](https://addons.mozilla.org/en-US/firefox/addon/window-resizer/) (Firefox version is being discontinued; Chrome preferred)
2. Go back and view the [original *fluid* layout version of the site](02/02-fluid)
3. Play with the window size in your browser
4. At what window width does the two-column navigation start looking awkward to you?
5. At what window width does it seem like the vertical navigation should kick in?
6. Write the media queries that you'd use to contain the rules for the different layouts (no need to write the actual CSS or anything; just the media queries).

### Mobile-first CSS

1. For the pixel-based media query mobile-first CSS, see `examples/04/01-mobile-first/styles.css`.
2. For the em-based media query mobile-first CSS, see `examples/04/02-relative-queries/styles.css`.


## References

* [Mediaqueri.es](http://mediaqueri.es/) Examples of media-query driven designs.
* Rough rule of thumb for font sizes: `1em = 100% ~= 16px ~= 12pt`. *Approximately*.
* [The Ems Have it](http://blog.cloudfour.com/the-ems-have-it-proportional-media-queries-ftw/), a blog post on our blog about em-based media queries.

----------------------------------------------------------------

# Section 5: When RWD Goes Wrong

----------------------------------------------------------------

# Section 6: Advanced RWD Topics

## Flexbox CSS

~~~{.css}
@media screen and (max-width: 35em) {
  body>div {
    display:    -webkit-flexbox;
    -webkit-flex-flow: column;

    display: -moz-flexbox;
    -moz-flex-flow: column;

    display: -o-flexbox;
    -o-flex-flow: column;

    display: flexbox;
  }

  body>div nav {
    -webkit-flex-order: 1;
    -moz-flex-order: 1;
    -o-flex-order: 1;
    flex-order: 1;
  }
  /** ...and so on... **/
~~~

For the final CSS, with the menu button, see `examples/06/01-flexbox/styles.css`.

## References

* [Styletil.es](styletil.es), a new approach of visual design workflow for websites
* [Flexbox Spec](http://www.w3.org/TR/css3-flexbox), the W3C's CSS3 flexbox spec at present
* [Stephen Hay's Flexbox Tutorial](http://www.the-haystack.com/2012/01/04/learn-you-a-flexbox/) A great place to start.
* [CSS-Tricks Article: Viewport Sized Typography](http://css-tricks.com/viewport-sized-typography/) from [@chriscoyier](http://twitter.com/chriscoyier)
* [FitText JavaScript plugin](http://fittextjs.com/)

---------------------------------------------------------------------

# Section 7: Awesomesauce: AppCache and Geolocation

## ApplicationCache

### Steps to AppCache

1. Write a `cache manifest` file
2. Configure web server to serve cache manifest file(s) as MIME-type `text/cache-manifest`
3. Tell browsers about the manifest by using the `manifest` attribute on the `html` element.

### Snippet Reference: Basic Cache Manifest

~~~
CACHE MANIFEST

CACHE:
foo.jpg
bar.png
index.html
ding/dong.html
~~~~

### Snippet Reference: Apache configuration

~~~
AddType text/cache-manifest .appcache
~~~

##### .htaccess

### Snippet Reference: `manifest` attribute

~~~{.html}
<html manifest="manifest.appcache">
~~~

## Exercise

### Exercise

1. Open the `index.html` file for the Sigma Stronghold site in `examples/07/01-appcache`.
2. Identify all of the resources we want to cache for the page. (*hint*: You'll also want to look at the CSS file, `styles.css`)
3. Create a basic cache manifest file (`manifest.appcache`).
4. *Remember*: All referenced resources—images, JavaScript, CSS, etc.—must be listed in the Cache Manifest.

##### .htaccess example

## Geolocation

~~~{.javascript}
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoError);
} else {
  alert('Sorry, Geolocation not supported in this browser!');
}
function onGeoSuccess(position) {
  var coordinates = position.coords;
  alert(coordinates.latitude + ", " + coordinates.longitude);
}
function onGeoError(error) {
  alert(error.message);
}
~~~

## References

* Final version of cache manifest file and font files can be found in `examples/07/02-appcache-fonts` (This includes final cache manifest file *and* updated .htaccess file with performance tweaks and appCache handler).
* Geolocation example can be found in `07/03-geolocation`. *Note*: If you are not running a local web server, you may not be able to get the geolocation example to work; many browsers' security settings disallow JS-based geolocation for local files.

### ApplicationCache

* [WHATWG Offline Web Applications Spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html) (AppCache spec)
* [Beginner's Guide to AppCache](http://www.html5rocks.com/en/tutorials/appcache/beginner/) on HTML5Rocks
* [AppCacheFacts.info](http://appcachefacts.info/)
* [FontSquirrel fontface generator](http://www.fontsquirrel.com/fontface/generator)
* Useful: Use `chrome://appcache-internals` to inspect the contents of AppCache in Chrome
* Useful: Use WebInspector in other Webkit browsers to inspect AppCache

### A bit on `@font-face`

* [Essential Guide to @font-face](http://sixrevisions.com/css/font-face-guide/) (A bit out of date, but decent)
* Paul Irish's [Bulletproof @font-face](http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/)
* [Font Squirrel](http://www.fontsquirrel.com/fontface/generator)


### Geolocation

* The spec for the [W3C Geolocation API spec](http://dev.w3.org/geo/api/spec-source.html) is relatively short and easy to understand (as specs go).

--------------------------------------------------------------

# Section 8: Devices, devices, devices (and browsers)

## Feature Detection using JavaScript

You can find the source code for these examples in `examples/08/`.

* `01-modernizr` : Touch event support via Modernizr.
* `02-touch`: Using Modernizr touch support test to change layout of Sigma Stronghold.
* `03-javascript`: More feature testing with JS
* `04-wurfl`: Server-side device detection using the WURFL Cloud Service. *Note*: PHP and a valid WURFL Cloud API key required.[^wurfl]
* `05-flexbox`: Could Modernizr tests help us with our flexbox example?

## Exercise

Let’s do a test run using a device detection database.

1. Go to the [ScientiaMobile WURFL Explorer][explorer] on your mobile phone
2. Check out the various attributes. What do you see that would be useful?
3. Can you find the screen resolution of your phone?
4. Go to the [ScientiaMobile WURFL Explorer][explorer] on your laptop

## Resources

* [Modernizr](http://www.modernizr.com)
* [Download Custom Modernizr Build](http://modernizr.com/download/)
* [WURFL][wurfl] (Wireless Universal Resource FiLe) by [ScientiaMobile][scientiamobile]
* [DeviceAtlas][deviceatlas] by [dotMobi][dotmobi]
* New Apache [DeviceMap][devicemap] Project
* [51degrees][51]
* [RESS: Responsive Design + Server-Side Components](http://www.lukew.com/ff/entry.asp?1392) from Luke Wroblewski


[^wurfl]: You can get a free API key at <http://www.scientiamobile.com/cloud>. The capabilities used in the example are `is_touchscreen` and `has_cellular_radio`. This is likely more trouble than you want to go to to follow along; no worries!

--------------------------------------------------------------

# Section 9: Mobile Web Apps with Frameworks; jQuery Mobile


## References

* See `examples/09/01-mockup` for an end result example
* [jQuery Mobile 1.1 Documentation](http://jquerymobile.com/demos/1.1.0/)
* [HTML5 data-* attribute](http://html5doctor.com/html5-custom-data-attributes/) on the HTML5Doctor

--------------------------------------------------------------------------

# Section 10: Advanced Mobile Web Apps

If you want to follow along, see `examples/10/01-functional`.

## References

* [Lawnchair](http://westcoastlogic.com/lawnchair/) Simple JSON storage
* [Lawnchair adapters](http://westcoastlogic.com/lawnchair/adapters/) (We used the `dom` adapter in this example)
* [date.format.js](http://code.google.com/p/myroundcube/source/browse/plugins/calendar/program/js/date.format.js?spec=svn74&r=70) on Google Code
* [geo-location-javascript](http://code.google.com/p/geo-location-javascript/) Cross-browser geolocation in JavaScript
* [Smashing Magazine Article on using LocalStorage](http://coding.smashingmagazine.com/2010/10/11/local-storage-and-how-to-use-it/)

-------------------------------------------------------------------------

# Section 11: Going Hybrid

## References

* [PhoneGap Build](http://build.phonegap.com)
* [PhoneGap config.xml syntax](https://build.phonegap.com/docs/config-xml)

-------------------------------------------------------------------------

# Section 12: Testing

## A decision matrix for what devices to support.

### Project requirements

* Browser features
* Device capabilities
* Hardware performance
* Network speed & availability

### Audience characteristics

* Analytics
* Surveying
* Geographic Trends
* Demographics

## References

* [A “Comprehensive” Guide to Mobile Statistics](http://blog.cloudfour.com/a-comprehensive-guide-to-mobile-statistics/)
* [User agent switcher](https://addons.mozilla.org/en-US/firefox/addon/user-agent-switcher/)
* [User agent switcher config file](http://techpatterns.com/forums/about304.html)
* [Resizer](https://chrome.google.com/webstore/detail/kkelicaakdanhinjdeammmilcgefonfh) / [Web Developer Toolkit](http://chrispederick.com/work/web-developer/)
* [Mobile Performance Bookmarklets](http://stevesouders.com/mobileperf/mobileperfbkm.php)
* [jDrop](http://jdrop.org/)
* [Blaze.io Mobile Test](http://blaze.io/mobile)
* [Adobe Shadow](http://labs.adobe.com/downloads/shadow.html)
* [Weinre](http://people.apache.org/~pmuellr/weinre/)
* [Debug.phonegap.com](http://debug.phonegap.com/)
* [Drive-in](https://github.com/scottjehl/Drive-In)
* [Shim](https://github.com/marstall/shim#readme)
* [Device Anywhere](http://www.keynotedeviceanywhere.com/)
* [Perfecto Mobile](http://www.perfectomobile.com/)



-------------------------------------------------------------------------

# Section 13: Future Friendly

* [Future Friendly](http://futurefriend.ly)


[zombie-types]: http://uncyclopedia.wikia.com/wiki/Zombie_Types
[wurfl]: http://wurfl.sourceforge.net/
[scientiamobile]: http://www.scientiamobile.com/
[deviceatlas]: http://deviceatlas.com/
[dotmobi]: http://mtld.mobi/
[51]: http://51degrees.mobi/Products/DeviceData.aspx
[devicemap]: http://wiki.apache.org/incubator/DeviceMapProposal
[explorer]: http://www.tera-wurfl.com/explore/
[ress]: http://www.lukew.com/ff/entry.asp?1392
[openddr]: http://openddr.org

